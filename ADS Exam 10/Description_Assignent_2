Description
In this assignment, you are expected to sort a list of arrays of integers in increasing order. You will start sorting based on the value at the first index of each array. In case of ties, you sort based on the value at the next index of the array. You may assume that all arrays have the same length.

You should implement the following methods:

List<int[]> sortWith(List<int[]> list, int i)

Sorts the list of arrays based on the value at index 𝑖
. This should be implemented through recursive merge sort.
Runs in (𝑛log𝑛)
 time, where 𝑛
 is length of the list.
You may assume that all arrays have the same length.
Hint: an array [1, 2] would come before an array [1, 3] when sorted based on index 1.
List<int[]> sort(List<int[]> list)

Sorts the list of arrays by making use of the sortWith method. This method should use LSD radix sort.
Runs in (𝑑𝑛log𝑛)
 time, where 𝑛
 is length of the list and 𝑑
 is the length of the largest array.
IMPORTANT:

Your implementation will be manually checked to see if you actually implemented a recursive merge sort combined with a LSD radix sort.
The time complexity of your solution will be checked manually. If your implementation does not adhere to the set requirements, points will be deducted.
This assignment will be graded based on a manual rubric. Tests are not an indication of your final grade, but are meant to help you figure out if you are on the right track.